plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
    id 'eclipse'
    id 'idea'
    alias libs.plugins.modDevGradle
    alias libs.plugins.lombok
}

/*kotlin {
    jvmToolchain(17)
}*/

group = maven_group
version = "${mod_version}"

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

sourceSets {
    // Include resources generated by data generators.
    main.resources {
        srcDir 'src/generated/resources'
    }

    test {
        kotlin {
            srcDirs += 'src/test/java'
        }
        compileClasspath += main.output
        runtimeClasspath += main.output + main.runtimeClasspath
    }

    extra {
        compileClasspath += main.output
        runtimeClasspath += main.output + main.runtimeClasspath
    }
}

obfuscation {
    createRemappingConfiguration(configurations.extraRuntimeOnly)
}

apply from: "$rootDir/gradle/scripts/jars.gradle"
apply from: "$rootDir/gradle/scripts/moddevgradle.gradle"
apply from: "$rootDir/gradle/scripts/repositories.gradle"
apply from: "$rootDir/dependencies.gradle"
apply from: "$rootDir/gradle/scripts/resources.gradle"


tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:-removal"
}

tasks.named("processResources") {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

lombok {
    version = "1.18.36"
}
